{
  "stats": {
    "suites": 5,
    "tests": 16,
    "passes": 16,
    "pending": 0,
    "failures": 0,
    "start": "2022-09-12T13:47:26.662Z",
    "end": "2022-09-12T13:47:56.439Z",
    "duration": 7254,
    "testsRegistered": 16,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "468b6514-22d9-4dfe-90ae-2af3b2b6e48e",
      "title": "",
      "fullFile": "cypress/integration/2.login.spec.js",
      "file": "cypress/integration/2.login.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "3a5cec5d-5667-4917-bfdf-67503dd441a3",
          "title": "Casos de teste sobre a rota /login da API Serverest",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Deve realizar login com sucesso",
              "fullTitle": "Casos de teste sobre a rota /login da API Serverest Deve realizar login com sucesso",
              "timedOut": null,
              "duration": 501,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// codigo realizado na call e mentoria\n_serverest.default.buscarUsuarioParaLogin();\ncy.get('@usuarioLogin').then(usuario => {\n  _serverest.default.logar(usuario).then(res => {\n    _validaServerest.default.validarLoginComSucesso(res);\n    cy.contractValidation(res, 'post-login', 200);\n    _serverest.default.salvarBearer(res);\n  });\n});",
              "err": {},
              "uuid": "05c61b63-73c0-4758-a0eb-3fca49c5bfbb",
              "parentUUID": "3a5cec5d-5667-4917-bfdf-67503dd441a3",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Não deve realizar login com email invalido ",
              "fullTitle": "Casos de teste sobre a rota /login da API Serverest Não deve realizar login com email invalido ",
              "timedOut": null,
              "duration": 236,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "//eu\ncy.logarEmailInvalido().then(res => {\n  cy.contractValidation(res, 'post-login', 400); // aqui tem bug na documentação esta 400, porem retorna um 401\n  _validaServerest.default.validarLoginComEmailsInvalido(res);\n});",
              "err": {},
              "uuid": "9700a76a-247e-417d-896e-4ded7cab9ed8",
              "parentUUID": "3a5cec5d-5667-4917-bfdf-67503dd441a3",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "05c61b63-73c0-4758-a0eb-3fca49c5bfbb",
            "9700a76a-247e-417d-896e-4ded7cab9ed8"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 737,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "8eb63be6-7e24-450f-b77a-9009c2e59453",
      "title": "",
      "fullFile": "cypress/integration/3.produtos.spec.js",
      "file": "cypress/integration/3.produtos.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "3c6c2264-b313-4f7b-8901-1c84d47f9e59",
          "title": "Casos de teste sobre a rota /produtos da API Serverest",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Deve buscar todos os produtos cadastrados",
              "fullTitle": "Casos de teste sobre a rota /produtos da API Serverest Deve buscar todos os produtos cadastrados",
              "timedOut": null,
              "duration": 266,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "_serverest.default.buscarProdutos().then(res => {\n  _validaServerest.default.validarBuscaDeProdutos(res);\n});",
              "err": {},
              "uuid": "b287cb49-3b59-4437-9da2-a278ee3ff9f9",
              "parentUUID": "3c6c2264-b313-4f7b-8901-1c84d47f9e59",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [
            {
              "uuid": "bb29db86-fff1-4ca2-a192-185543180f2f",
              "title": "Logar com sucesso",
              "fullFile": "",
              "file": "",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Deve postar um novo produto com sucesso",
                  "fullTitle": "Casos de teste sobre a rota /produtos da API Serverest Logar com sucesso Deve postar um novo produto com sucesso",
                  "timedOut": null,
                  "duration": 696,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "_serverest.default.cadastrarProdutoComSucesso().then(res => {\n  cy.contractValidation(res, 'post-produtos', 201);\n  _validaServerest.default.validarCadastroDeProdutosComSucesso(res);\n});",
                  "err": {},
                  "uuid": "657997dd-f240-46bd-bb22-f4ad93ac7858",
                  "parentUUID": "bb29db86-fff1-4ca2-a192-185543180f2f",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Deve deletar um produto com sucesso",
                  "fullTitle": "Casos de teste sobre a rota /produtos da API Serverest Logar com sucesso Deve deletar um produto com sucesso",
                  "timedOut": null,
                  "duration": 674,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "_serverest.default.deletarProdutoCadastrado().then(res => {\n  cy.contractValidation(res, 'delete-produtos-by-id', 200); //ValidaServerest.validarCadastroDeProdutosComSucesso(res)\n  expect(res.body.message).to.be.equal('Registro excluído com sucesso');\n});",
                  "err": {},
                  "uuid": "4bae9418-c1b9-4ed2-9bdb-41ddd4199631",
                  "parentUUID": "bb29db86-fff1-4ca2-a192-185543180f2f",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "657997dd-f240-46bd-bb22-f4ad93ac7858",
                "4bae9418-c1b9-4ed2-9bdb-41ddd4199631"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1370,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            }
          ],
          "passes": [
            "b287cb49-3b59-4437-9da2-a278ee3ff9f9"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 266,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "cd508b29-06f5-4d00-a251-79510dc5f184",
      "title": "",
      "fullFile": "cypress/integration/4.carrinhos.spec.js",
      "file": "cypress/integration/4.carrinhos.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "6d4aa2a5-ed56-4063-9e11-9f0cc4ae590e",
          "title": "Casos de teste sobre a rota /carrinhos da API Serverest",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Deve listar todos os carrinhos cadastrados",
              "fullTitle": "Casos de teste sobre a rota /carrinhos da API Serverest Deve listar todos os carrinhos cadastrados",
              "timedOut": null,
              "duration": 324,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "_serverest.default.buscarCarrinhos().then(res => {\n  cy.contractValidation(res, 'get-carrinhos', 200);\n  _validaServerest.default.validarBuscaDeCarrinhos(res);\n});",
              "err": {},
              "uuid": "21ecc9ef-1589-4381-8354-63f2145ee09b",
              "parentUUID": "6d4aa2a5-ed56-4063-9e11-9f0cc4ae590e",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "21ecc9ef-1589-4381-8354-63f2145ee09b"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 324,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "1dffc658-1456-430c-b419-8fed3a55a132",
          "title": "Logar com sucesso",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Deve cadastrar um carrinho com sucesso ",
              "fullTitle": "Logar com sucesso Deve cadastrar um carrinho com sucesso ",
              "timedOut": null,
              "duration": 717,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "_serverest.default.cadastrarCarrinhoComSucesso().then(res => {\n  cy.contractValidation(res, 'post-carrinhos', 201);\n  expect(res.body.message).to.be.equal('Cadastro realizado com sucesso');\n});",
              "err": {},
              "uuid": "dcea021e-2ead-43f2-a56c-cb2066f9de7c",
              "parentUUID": "1dffc658-1456-430c-b419-8fed3a55a132",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Deve excluir um carrinho com sucesso e concluir compra ",
              "fullTitle": "Logar com sucesso Deve excluir um carrinho com sucesso e concluir compra ",
              "timedOut": null,
              "duration": 639,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "//Codigo desenvolvido com a ajuda do João/Vinicius\n_serverest.default.concluirCompra().then(res => {\n  cy.contractValidation(res, 'delete-carrinhos-concluir-compra', 200);\n  expect(res.body.message).to.be.equal('Registro excluído com sucesso');\n});",
              "err": {},
              "uuid": "f9cdc4b4-d4ac-482f-8b6a-1ca9bb5b136a",
              "parentUUID": "1dffc658-1456-430c-b419-8fed3a55a132",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Deve excluir um carrinho com sucesso e retornar produto para estoque ",
              "fullTitle": "Logar com sucesso Deve excluir um carrinho com sucesso e retornar produto para estoque ",
              "timedOut": null,
              "duration": 722,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "//Codigo desenvolvido com a ajuda do João/Vinicius\n_serverest.default.cancelarCompra().then(res => {\n  cy.contractValidation(res, 'delete-carrinhos-cancelar-compra', 200);\n  expect(res.body.message).to.be.equal('Não foi encontrado carrinho para esse usuário');\n});",
              "err": {},
              "uuid": "e598a49a-7e79-4c0a-ad0e-681cd9fdef56",
              "parentUUID": "1dffc658-1456-430c-b419-8fed3a55a132",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "dcea021e-2ead-43f2-a56c-cb2066f9de7c",
            "f9cdc4b4-d4ac-482f-8b6a-1ca9bb5b136a",
            "e598a49a-7e79-4c0a-ad0e-681cd9fdef56"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2078,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "866eb434-15da-48da-8e20-322296167753",
      "title": "",
      "fullFile": "cypress/integration/5.nao-mapeado.js",
      "file": "cypress/integration/5.nao-mapeado.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "05c6bd79-8fd7-491b-9b82-7dc8e912f823",
          "title": "Casos de teste não mapeado na documentação da API Serverest",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Não deve realizar login sem email ",
              "fullTitle": "Casos de teste não mapeado na documentação da API Serverest Não deve realizar login sem email ",
              "timedOut": null,
              "duration": 257,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "//eu  //sem documentaçao swagger\ncy.logarSemEmail().then(res => {\n  _validaServerest.default.validarLoginSemEmail(res);\n});",
              "err": {},
              "uuid": "92d291c2-3e57-4a89-8c36-4e74a4502d0b",
              "parentUUID": "05c6bd79-8fd7-491b-9b82-7dc8e912f823",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [
            {
              "uuid": "187b8525-b7c9-4b33-ac68-6b80fb88751f",
              "title": "Logar com sucesso",
              "fullFile": "",
              "file": "",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Deve tentar cadastrar um produto com valor negativo, sem sucesso,",
                  "fullTitle": "Casos de teste não mapeado na documentação da API Serverest Logar com sucesso Deve tentar cadastrar um produto com valor negativo, sem sucesso,",
                  "timedOut": null,
                  "duration": 649,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "//não esta mapeado\n_serverest.default.cadastrarProdutoSemSucesso().then(res => {\n  //retorna 401 undefined\n  _validaServerest.default.validarCadastroDeProdutosSemSucesso(res); //as vezes retorna 403 entao da erro \n  //na validação da mensagem\n});",
                  "err": {},
                  "uuid": "6440a13a-1605-4ccc-b412-9504c76a9080",
                  "parentUUID": "187b8525-b7c9-4b33-ac68-6b80fb88751f",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "6440a13a-1605-4ccc-b412-9504c76a9080"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 649,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            }
          ],
          "passes": [
            "92d291c2-3e57-4a89-8c36-4e74a4502d0b"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 257,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "8ae3c99b-7262-4d61-b399-021e42e1df1e",
      "title": "",
      "fullFile": "cypress/integration/1.usuarios.spec.js",
      "file": "cypress/integration/1.usuarios.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "061462f7-6257-4015-974e-f1c6d7d40a8c",
          "title": "Casos de teste sobre a rota /usuarios da API Serverest",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Deve buscar todos os usuários cadastrados na Serverest",
              "fullTitle": "Casos de teste sobre a rota /usuarios da API Serverest Deve buscar todos os usuários cadastrados na Serverest",
              "timedOut": null,
              "duration": 573,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "_serverest.default.buscarUsuarios().then(res => {\n  cy.contractValidation(res, 'get-usuarios', 200);\n  _validaServerest.default.validarBuscaDeUsuarios(res);\n});",
              "err": {},
              "uuid": "6303a452-1dc2-4f45-b4d1-0dccc599e481",
              "parentUUID": "061462f7-6257-4015-974e-f1c6d7d40a8c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Não deve postar um novo usuários administrador existente",
              "fullTitle": "Casos de teste sobre a rota /usuarios da API Serverest Não deve postar um novo usuários administrador existente",
              "timedOut": null,
              "duration": 248,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.postarUsuarioSemSucesso().then(res => {\n  cy.contractValidation(res, 'post-usuarios', 400);\n  expect(res.body.message).to.be.eq('Este email já está sendo usado');\n});",
              "err": {},
              "uuid": "69d0487e-c2f5-41a1-becd-a7e277534814",
              "parentUUID": "061462f7-6257-4015-974e-f1c6d7d40a8c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Deve buscar o usuário de um arquivo json",
              "fullTitle": "Casos de teste sobre a rota /usuarios da API Serverest Deve buscar o usuário de um arquivo json",
              "timedOut": null,
              "duration": 241,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.fixture('usuario.json').then(json => {\n  let usuario = {\n    email: json.email,\n    password: json.password\n  };\n  _serverest.default.logar(usuario).then(res => {\n    _validaServerest.default.validarLoginComSucesso(res);\n    _serverest.default.salvarBearer(res);\n  });\n});",
              "err": {},
              "uuid": "6c2a6311-4cb4-46cd-a0fd-61c2554f5855",
              "parentUUID": "061462f7-6257-4015-974e-f1c6d7d40a8c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Deve buscar e salva um usuário em um arquivo json",
              "fullTitle": "Casos de teste sobre a rota /usuarios da API Serverest Deve buscar e salva um usuário em um arquivo json",
              "timedOut": null,
              "duration": 269,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let inteiro = _factory.default.gerarInteiroAleatorio();\n_serverest.default.buscarUsuarios().then(res => {\n  cy.writeFile('./cypress/fixtures/usuario.json', res.body.usuarios[inteiro]);\n  _validaServerest.default.validarBuscaDeUsuarios(res);\n});",
              "err": {},
              "uuid": "d4ed70fc-945c-4ff3-9f8c-305605743dfa",
              "parentUUID": "061462f7-6257-4015-974e-f1c6d7d40a8c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Deve cadastrar um usuário com sucesso",
              "fullTitle": "Casos de teste sobre a rota /usuarios da API Serverest Deve cadastrar um usuário com sucesso",
              "timedOut": null,
              "duration": 242,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.cadastrarUsuarioComSucesso().then(res => {\n  cy.contractValidation(res, 'post-usuarios', 201);\n  expect(res.body.message).to.be.equal('Cadastro realizado com sucesso');\n});",
              "err": {},
              "uuid": "9843d895-a2d9-400b-b5a8-df320c1b1425",
              "parentUUID": "061462f7-6257-4015-974e-f1c6d7d40a8c",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "6303a452-1dc2-4f45-b4d1-0dccc599e481",
            "69d0487e-c2f5-41a1-becd-a7e277534814",
            "6c2a6311-4cb4-46cd-a0fd-61c2554f5855",
            "d4ed70fc-945c-4ff3-9f8c-305605743dfa",
            "9843d895-a2d9-400b-b5a8-df320c1b1425"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1573,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "id": "default",
        "reportDir": "cypress/reports/mocha",
        "quite": true,
        "overwrite": false,
        "html": false,
        "json": true
      },
      "version": "6.2.0"
    }
  }
}