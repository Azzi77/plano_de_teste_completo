{
  "stats": {
    "suites": 2,
    "tests": 7,
    "passes": 6,
    "pending": 0,
    "failures": 1,
    "start": "2022-09-27T19:28:26.804Z",
    "end": "2022-09-27T19:28:32.294Z",
    "duration": 5490,
    "testsRegistered": 7,
    "passPercent": 85.71428571428571,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "17aea881-5df6-45e9-bcd5-ca77c23afeae",
      "title": "",
      "fullFile": "cypress/integration/3.produtos.spec.js",
      "file": "cypress/integration/3.produtos.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "37a217fe-faa1-465c-b436-a00354c3042a",
          "title": "Casos de teste sobre a rota /produtos da API Serverest",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Deve buscar todos os produtos cadastrados",
              "fullTitle": "Casos de teste sobre a rota /produtos da API Serverest Deve buscar todos os produtos cadastrados",
              "timedOut": null,
              "duration": 373,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "_serverest.default.buscarProdutos().then(res => {\n  _validaServerest.default.validarBuscaDeProdutos(res);\n});",
              "err": {},
              "uuid": "b30c9690-2548-497e-84cd-64ddd911cde7",
              "parentUUID": "37a217fe-faa1-465c-b436-a00354c3042a",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [
            {
              "uuid": "9d490070-2501-4e39-a023-1c5644551f70",
              "title": "Logar com sucesso",
              "fullFile": "",
              "file": "",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Deve cadastrar um novo produto com sucesso",
                  "fullTitle": "Casos de teste sobre a rota /produtos da API Serverest Logar com sucesso Deve cadastrar um novo produto com sucesso",
                  "timedOut": null,
                  "duration": 918,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "_serverest.default.cadastrarProdutoComSucesso().then(res => {\n  cy.contractValidation(res, 'post-produtos', 201);\n  _validaServerest.default.validarCadastroDeProdutosComSucesso(res);\n});",
                  "err": {},
                  "uuid": "81a6a2a3-7795-4236-92af-659724187ac1",
                  "parentUUID": "9d490070-2501-4e39-a023-1c5644551f70",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Deve buscar um produto pelo id com sucesso",
                  "fullTitle": "Casos de teste sobre a rota /produtos da API Serverest Logar com sucesso Deve buscar um produto pelo id com sucesso",
                  "timedOut": null,
                  "duration": 757,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "_serverest.default.buscarProdutosPorId().then(res => {\n  cy.contractValidation(res, 'get-produtos-by-id', 200);\n  _validaServerest.default.validarBuscaDeProdutosPorId(res);\n});",
                  "err": {},
                  "uuid": "d3c921da-c8d8-4f9f-a352-14c1554b74ed",
                  "parentUUID": "9d490070-2501-4e39-a023-1c5644551f70",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Deve editar um produto com sucesso",
                  "fullTitle": "Casos de teste sobre a rota /produtos da API Serverest Logar com sucesso Deve editar um produto com sucesso",
                  "timedOut": null,
                  "duration": 775,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "_serverest.default.editarProdutosPorId().then(res => {\n  cy.contractValidation(res, 'put-produtos-by-id', 200);\n  expect(res.body.message).to.be.equal('Registro alterado com sucesso');\n});",
                  "err": {},
                  "uuid": "ae0536a6-6caa-4031-b208-10f3850b8851",
                  "parentUUID": "9d490070-2501-4e39-a023-1c5644551f70",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Deve tentar cadastrar um produto com nome existente,sem sucesso",
                  "fullTitle": "Casos de teste sobre a rota /produtos da API Serverest Logar com sucesso Deve tentar cadastrar um produto com nome existente,sem sucesso",
                  "timedOut": null,
                  "duration": 760,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "_serverest.default.cadastrarProdutoComNomeExistente().then(res => {\n  cy.contractValidation(res, 'post-produtos', 400);\n  expect(res.body.message).to.be.equal('Já existe produto com esse nome');\n});",
                  "err": {},
                  "uuid": "db49b1fe-f715-4502-9def-157010d29540",
                  "parentUUID": "9d490070-2501-4e39-a023-1c5644551f70",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Deve tentar cadastrar um produto com valor negativo, sem sucesso,",
                  "fullTitle": "Casos de teste sobre a rota /produtos da API Serverest Logar com sucesso Deve tentar cadastrar um produto com valor negativo, sem sucesso,",
                  "timedOut": null,
                  "duration": 1212,
                  "state": "failed",
                  "speed": null,
                  "pass": false,
                  "fail": true,
                  "pending": false,
                  "context": null,
                  "code": "//não esta mapeado\n_serverest.default.cadastrarProdutoSemSucesso().then(res => {\n  //retorna 401 undefined\n  _validaServerest.default.validarCadastroDeProdutosSemSucesso(res); //as vezes retorna 403 entao da erro \n  //na validação da mensagem\n});",
                  "err": {
                    "message": "AssertionError: expected undefined to equal 'preco deve ser um número positivo'",
                    "estack": "AssertionError: expected undefined to equal 'preco deve ser um número positivo'\n    at Function.validarCadastroDeProdutosSemSucesso (https://serverest.dev/__cypress/tests?p=cypress\\integration\\3.produtos.spec.js:525:41)\n    at Context.eval (https://serverest.dev/__cypress/tests?p=cypress\\integration\\3.produtos.spec.js:223:34)",
                    "diff": null
                  },
                  "uuid": "0132e166-1903-4cda-a51d-8baef2a24788",
                  "parentUUID": "9d490070-2501-4e39-a023-1c5644551f70",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Deve editar um produto sem sucesso, rota exclusiva para adiministrador true",
                  "fullTitle": "Casos de teste sobre a rota /produtos da API Serverest Logar com sucesso Deve editar um produto sem sucesso, rota exclusiva para adiministrador true",
                  "timedOut": null,
                  "duration": 519,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "// desevolver codigo",
                  "err": {},
                  "uuid": "8428f5c7-21a9-4198-a79a-f5db4a91fe77",
                  "parentUUID": "9d490070-2501-4e39-a023-1c5644551f70",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "81a6a2a3-7795-4236-92af-659724187ac1",
                "d3c921da-c8d8-4f9f-a352-14c1554b74ed",
                "ae0536a6-6caa-4031-b208-10f3850b8851",
                "db49b1fe-f715-4502-9def-157010d29540",
                "8428f5c7-21a9-4198-a79a-f5db4a91fe77"
              ],
              "failures": [
                "0132e166-1903-4cda-a51d-8baef2a24788"
              ],
              "pending": [],
              "skipped": [],
              "duration": 4941,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            }
          ],
          "passes": [
            "b30c9690-2548-497e-84cd-64ddd911cde7"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 373,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "id": "default",
        "reportDir": "cypress/reports/mocha",
        "quite": true,
        "overwrite": false,
        "html": false,
        "json": true
      },
      "version": "6.2.0"
    }
  }
}