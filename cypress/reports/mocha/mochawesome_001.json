{
  "stats": {
    "suites": 1,
    "tests": 6,
    "passes": 6,
    "pending": 0,
    "failures": 0,
    "start": "2022-09-27T19:28:18.707Z",
    "end": "2022-09-27T19:28:20.436Z",
    "duration": 1729,
    "testsRegistered": 6,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "7982a6e8-a77a-4fba-a46b-3e5f1a306566",
      "title": "",
      "fullFile": "cypress/integration/2.usuarios.spec.js",
      "file": "cypress/integration/2.usuarios.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "063df122-a639-4fa6-9481-cc6dca3c8586",
          "title": "Casos de teste sobre a rota /usuarios da API Serverest",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Deve buscar todos os usuários cadastrados na Serverest",
              "fullTitle": "Casos de teste sobre a rota /usuarios da API Serverest Deve buscar todos os usuários cadastrados na Serverest",
              "timedOut": null,
              "duration": 533,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "_serverest.default.buscarUsuarios().then(res => {\n  cy.contractValidation(res, 'get-usuarios', 200);\n  _validaServerest.default.validarBuscaDeUsuarios(res); //ok\n});",
              "err": {},
              "uuid": "6071be8e-ada7-4f9c-be54-29d12957a3de",
              "parentUUID": "063df122-a639-4fa6-9481-cc6dca3c8586",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Deve cadastrar um usuário com sucesso",
              "fullTitle": "Casos de teste sobre a rota /usuarios da API Serverest Deve cadastrar um usuário com sucesso",
              "timedOut": null,
              "duration": 279,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "_serverest.default.cadastrarUsuarioComSucesso().then(res => {\n  cy.contractValidation(res, 'post-usuarios', 201);\n  expect(res.body.message).to.be.equal('Cadastro realizado com sucesso');\n  Cypress.env('idUsuarioCadastrado', res.body._id); //ok\n});",
              "err": {},
              "uuid": "f0d45258-8783-412b-80d3-6f5b1a158fe8",
              "parentUUID": "063df122-a639-4fa6-9481-cc6dca3c8586",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Deve buscar um usuário por _id com sucesso",
              "fullTitle": "Casos de teste sobre a rota /usuarios da API Serverest Deve buscar um usuário por _id com sucesso",
              "timedOut": null,
              "duration": 247,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "_serverest.default.buscarUsuarioPorId().then(res => {\n  cy.contractValidation(res, 'get-usuarios-by-id', 200);\n  _validaServerest.default.validarBuscaDeUsuarioPorId(res);\n});",
              "err": {},
              "uuid": "24d15e62-c1bb-4df6-b6de-4ebca273d96b",
              "parentUUID": "063df122-a639-4fa6-9481-cc6dca3c8586",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Deve editar um usuário com sucesso",
              "fullTitle": "Casos de teste sobre a rota /usuarios da API Serverest Deve editar um usuário com sucesso",
              "timedOut": null,
              "duration": 272,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "_serverest.default.editarUsuarioComSucesso().then(res => {\n  cy.contractValidation(res, 'put-usuario-by-id', 200);\n  expect(res.body.message).to.be.eq('Registro alterado com sucesso');\n});",
              "err": {},
              "uuid": "f4e8d772-ebfe-446a-997a-a189382980a5",
              "parentUUID": "063df122-a639-4fa6-9481-cc6dca3c8586",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Não deve cadastrar um novo usuários, com e-mail já utilizado em outro cadastrado",
              "fullTitle": "Casos de teste sobre a rota /usuarios da API Serverest Não deve cadastrar um novo usuários, com e-mail já utilizado em outro cadastrado",
              "timedOut": null,
              "duration": 299,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.cadastrarUsuarioSemSucesso().then(res => {\n  cy.contractValidation(res, 'post-usuarios', 400);\n  expect(res.body.message).to.be.eq('Este email já está sendo usado');\n});",
              "err": {},
              "uuid": "42b50ea0-9458-43ec-99b3-0c1b8c646925",
              "parentUUID": "063df122-a639-4fa6-9481-cc6dca3c8586",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Não deve editar um novo usuário, com e-mail já utilizado em outro cadastrado",
              "fullTitle": "Casos de teste sobre a rota /usuarios da API Serverest Não deve editar um novo usuário, com e-mail já utilizado em outro cadastrado",
              "timedOut": null,
              "duration": 27,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// falta desevolver código",
              "err": {},
              "uuid": "ff19236e-eebe-4767-8f00-b301c0085bdf",
              "parentUUID": "063df122-a639-4fa6-9481-cc6dca3c8586",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "6071be8e-ada7-4f9c-be54-29d12957a3de",
            "f0d45258-8783-412b-80d3-6f5b1a158fe8",
            "24d15e62-c1bb-4df6-b6de-4ebca273d96b",
            "f4e8d772-ebfe-446a-997a-a189382980a5",
            "42b50ea0-9458-43ec-99b3-0c1b8c646925",
            "ff19236e-eebe-4767-8f00-b301c0085bdf"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1657,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "id": "default",
        "reportDir": "cypress/reports/mocha",
        "quite": true,
        "overwrite": false,
        "html": false,
        "json": true
      },
      "version": "6.2.0"
    }
  }
}